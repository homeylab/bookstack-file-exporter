# needs: [tests]  # require tests to pass before deploy runs

name: Build and Push

# on:
#   push:
#     # Pattern matched against refs/tags
#     tags:
#       - '**' # Push events to every tag including hierarchical tags like v1.0/beta

on:
  pull_request:
    types:
      - closed
    branches:
      - main

# maybe trigger build/push on release tags?
# but this also works for my use case
jobs:
  docker_deploy:
    if: github.event.pull_request.merged
    runs-on: ubuntu-latest
    # specify this to target the correct env/secrets to use
    environment: 'Dockerhub' 
    steps:
    - uses: actions/checkout@v3
    - name: Login to Dockerhub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v3
    - name: Set up Docker Buildx
      id: buildx
      uses: docker/setup-buildx-action@v3
    - name: Build and push the Docker image
      run: make docker_build_latest
    # - name: Push Docker image
    #   run: make docker_push_latest
    - name: Update Dockerhub Documentation
      uses: peter-evans/dockerhub-description@v3
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
        repository: ${{ env.DOCKERHUB_REPO }}
  pypi_deploy:
    if: github.event.pull_request.merged
    runs-on: ubuntu-latest
    environment: 'PyPi' 
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python
      uses: actions/setup-python@v3
      with:
        python-version: '3.x'
    - name: Set tag version
      run: |
        TAG=$(cat Makefile | grep -E  ^IMAGE_TAG=[0-9].[0-9].[0-9] | cut -d "=" -f2)
        echo "VERSION=${TAG}" >> "$GITHUB_ENV"
        echo "version from Makefile is: ${VERSION}"
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install build
    - name: Update Release tag
      run: sed -i "s/^version = [^ ]*/version = ${{ env.VERSION }}/" setup.cfg
    - name: Build package
      run: make build
    - name: Publish package
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        password: ${{ secrets.PYPI_API_TOKEN }}
        skip-existing: true
  create_tag:
    if: github.event.pull_request.merged
    runs-on: ubuntu-latest
    needs:
      - docker_deploy
      - pypi_deploy
    permissions:
      contents: write
    steps:
    - uses: actions/checkout@v3
      with:
        ref: ${{ github.event.pull_request.merge_commit_sha }}
        fetch-depth: '0'
    - name: Set tag version
      run: |
        TAG=$(cat Makefile | grep -E  ^IMAGE_TAG=[0-9].[0-9].[0-9] | cut -d "=" -f2)
        echo "VERSION=v${TAG}" >> "$GITHUB_ENV"
        echo "version from Makefile is: ${VERSION}"
    - name: Create tag
      uses: anothrNick/github-tag-action@1.64.0
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        # WITH_V: true
        # PRERELEASE: true
        CUSTOM_TAG: ${{ env.VERSION }}
  create_release:
    if: github.event.pull_request.merged
    runs-on: ubuntu-latest
    needs:
      - create_tag
    permissions:
      contents: write
    steps:
    - uses: actions/checkout@v3
    - name: Set tag version
      run: |
        TAG=$(cat Makefile | grep -E  ^IMAGE_TAG=[0-9].[0-9].[0-9] | cut -d "=" -f2)
        echo "VERSION=v${TAG}" >> "$GITHUB_ENV"
        echo "version from Makefile is: ${VERSION}"
    - name: Generate release
      uses: ncipollo/release-action@v1
      with:
        tag: ${{ env.VERSION }}
        generateReleaseNotes: true
        skipIfReleaseExists: true
  # docker image tag latest
